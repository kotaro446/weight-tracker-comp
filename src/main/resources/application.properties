spring.application.name=weight-tracker

# データベース接続設定
spring.datasource.url=jdbc:mysql://localhost:3306/fujiwara
# MySQLのusernameを設定
spring.datasource.username=root
# MySQLのパスワードを設定
spring.datasource.password=MySQL2024!

# MySQLのドライバクラス名を設定
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA設定
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# サーバーポート設定（任意）

# すべてのネットワークインターフェイスでリッスン
# server.address=0.0.0.0

# HTTP用にポートを8080に設定（これがデフォルト）
server.port=8080

# 詳細なログ出力を有効化
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.com.weighttracker=DEBUG

# 静的リソースマッピング設定
spring.web.resources.add-mappings=true

# HTTPSの設定
# server.port=8443
# server.ssl.key-store-type=PKCS12
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=password
# server.ssl.key-alias=tomcat
# server.ssl.enabled=true

# OpenWeatherMap API設定
openweathermap.api.key=0223efd95c8c27911be85be62297f232
openweathermap.api.url=https://api.openweathermap.org/data/2.5/weather
openweathermap.default.city=Tokyo

# 起動時にテーブル構造を自動的に更新(開発用)
spring.jpa.hibernate.ddl-auto=update